CREATE DATABASE IF NOT EXISTS UniVivid;

USE UniVivid;

-- ユーザ情報
CREATE TABLE USER(
    User_ID INT AUTO_INCREMENT,
    Mail_Address varchar(254) NOT NULL UNIQUE,
    User_Name varchar(60) NOT NULL,
    Password varchar(60) NOT NULL,

    PRIMARY KEY(User_ID)
);


-- 大学情報
CREATE TABLE UNIVERSITY(
    Univ_ID INT AUTO_INCREMENT,
    Mail_Address VARCHAR(254) NOT NULL UNIQUE,
    Password VARCHAR(60) NOT NULL,
    Univ_Name VARCHAR(30) NOT NULL UNIQUE,
    info_name VARCHAR(60) NOT NULL,
    Univ_URL VARCHAR(2083) NOT NULL,
    donate_URL VARCHAR(2083),

    PRIMARY KEY(Univ_ID)
);

-- カテゴリ
CREATE TABLE CATEGORY(
    Category_ID INT AUTO_INCREMENT,
    Category_Name VARCHAR(20) NOT NULL UNIQUE,

    PRIMARY KEY(CATEGORY_ID)
);

-- 講義(記事のこと)
CREATE TABLE SEMINAR(
    Seminar_ID INT AUTO_INCREMENT, 
    Univ_ID INT NOT NULL,
    Seminar_Name VARCHAR(100) NOT NULL,
    Prof_name VARCHAR(60),
    Start_Date DATETIME NOT NULL,
    Category_ID INT NOT NULL,
    thumbnail MEDIUMBLOB,
    offer_URL VARCHAR(2083) NOT NULL,
    content VARCHAR(200) NOT NULL,

    PRIMARY KEY(Seminar_ID),

    FOREIGN KEY(Univ_ID) REFERENCES UNIVERSITY(Univ_ID),
    FOREIGN KEY(CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID)
);
-- ノート
CREATE TABLE Note(
    Note_ID INT AUTO_INCREMENT,
    Seminar_ID INT NOT NULL,
    Note MEDIUMBLOB NOT NULL,
    Upload_time DATETIME NOT NULL,
    approve TINYINT(1) NOT NULL DEFAULT 0,

    PRIMARY KEY(Note_ID),
    FOREIGN KEY(Seminar_ID) REFERENCES SEMINAR(Seminar_ID)
);



-- 興味
CREATE TABLE INTEREST(
    User_ID INT NOT NULL,
    CATEGORY_ID INT NOT NULL,

    FOREIGN KEY(User_ID) REFERENCES USER(User_ID),
    FOREIGN KEY(CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID)
);


-- 受講履歴
CREATE TABLE HISTORY(
    User_ID INT NOT NULL,
    Seminar_ID INT NOT NULL,

    FOREIGN KEY(User_ID) REFERENCES USER(User_ID),
    FOREIGN KEY(Seminar_ID) REFERENCES SEMINAR(Seminar_ID)
);


-- 高評価した講義
CREATE TABLE FAVE_SEMI(
    User_ID INT NOT NULL,
    Seminar_ID INT NOT NULL,

    FOREIGN KEY(User_ID) REFERENCES USER(User_ID),
    FOREIGN KEY(Seminar_ID) REFERENCES SEMINAR(Seminar_ID)
);


-- 高評価したノート
CREATE TABLE FAVE_NOTE(
    User_ID INT NOT NULL,
    Note_ID INT NOT NULL,

    FOREIGN KEY(User_ID) REFERENCES USER(User_ID),
    FOREIGN KEY(Note_ID) REFERENCES Note(Note_ID)
);


-- 講義コメント
CREATE TABLE SEMINAR_COMMENT(
    Seminar_ID INT NOT NULL,
    User_ID INT NOT NULL,
    Comment VARCHAR(200) NOT NULL,
    approve TINYINT(1) NOT NULL DEFAULT 0,

    FOREIGN KEY(Seminar_ID) REFERENCES SEMINAR(Seminar_ID),
    FOREIGN KEY(User_ID) REFERENCES USER(User_ID)
);


-- 大学コメント
CREATE TABLE UNIV_COMMENT(
    comment_ID INT AUTO_INCREMENT,
    Univ_ID INT NOT NULL,
    User_ID INT NOT NULL,
    Review VARCHAR(200) NOT NULL,
    approve TINYINT(1) NOT NULL DEFAULT 0,

    PRIMARY KEY(comment_ID),

    FOREIGN KEY(Univ_ID) REFERENCES UNIVERSITY(Univ_ID),
    FOREIGN KEY(User_ID) REFERENCES USER(User_ID)
);